from aiogram_dialog import Dialog, LaunchMode, Window, DialogManager
from aiogram_dialog.widgets.kbd import Start, Row, Button
from aiogram_dialog.widgets.text import Const, Jinja

from . import states
from .planning import get_jinja_widget_for_tasks_displaying, get_planning_data_getter
from ...enums import FinanceTransactionType
from ...managers.finance_manager import FinanceManager

from hustler_bracelet.client import ActivityAPIClient


activity_client = ActivityAPIClient()


async def main_dialog_getter(dialog_manager: DialogManager, **kwargs):
    finance_manager: FinanceManager = dialog_manager.middleware_data['finance_manager']

    return {
        'balance': await finance_manager.get_balance(),
        'incomes_amount': await finance_manager.get_events_amount(FinanceTransactionType.INCOME),
        'spends_amount': await finance_manager.get_events_amount(FinanceTransactionType.SPENDING)
    }


async def on_event_click(callback, _, manager: DialogManager):
    activity = await activity_client.get_current_activity()

    if activity is None:
        await callback.answer('–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.', show_alert=True)
        return

    status = await activity_client.activity_status(
        activity_id=activity.id,
        user_id=manager.event.from_user.id,
    )

    if not status.already_joined:
        if not status.is_running:
            await callback.answer('–î–∞–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å.', show_alert=True)
            return

        elif status.occupied_places == status.total_places:
            await callback.answer('–î–∞–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∞.', show_alert=True)
            return

        elif status.can_join is False:
            await callback.answer('–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –¥–∞–Ω–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.', show_alert=True)
            return

    await manager.start(
        states.Activity.MAIN,
        data={
            'activity_id': activity.id,
        }
    )


main_dialog = Dialog(
    Window(
        Jinja(
            'üëã <b>–ü—Ä–∏–≤–µ—Ç, —Ö–∞—Å–ª–µ—Ä!</b>\n'
            '–í–æ—Ç —Ç–≤–æ—è —Å–≤–æ–¥–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n'
            '\n'
            'üíµ <b>–¢–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª:</b> {{ balance | money }}\n'
            '‚Ä¢ –°–µ–≥–æ–¥–Ω—è –±—ã–ª–æ {{ incomes_amount|plural(["–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ", "–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è", "–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π"]) }} '
            '–∏ {{ spends_amount|plural(["—Ä–∞—Å—Ö–æ–¥", "—Ä–∞—Å—Ö–æ–¥–∞", "—Ä–∞—Å—Ö–æ–¥–æ–≤"]) }}'
        ),
        get_jinja_widget_for_tasks_displaying(),
        Start(
            text=Const('ü§ë –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥'),
            id='add_income',
            state=states.AddFinanceEvent.MAIN,
            data={'event_type': FinanceTransactionType.INCOME}
        ),
        Start(
            text=Const('üí≥ –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥'),
            id='add_spend',
            state=states.AddFinanceEvent.MAIN,
            data={'event_type': FinanceTransactionType.SPENDING},
        ),
        Start(
            text=Const('üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É'),
            id='add_task',
            state=states.AddTask.MAIN
        ),
        Row(
            Start(
                text=Const('üí∏ –§–∏–Ω–∞–Ω—Å—ã'),
                id='finance_control_menu',
                state=states.FinanceMainMenu.MAIN
            ),
            Start(
                text=Const('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'),
                id='planning_menu',
                state=states.Planning.MAIN
            ),
            Start(
                text=Const('üí™ –°–ø–æ—Ä—Ç'),
                id='sport_menu',
                state=states.Sport.MAIN
            )
        ),
        Button(
            text=Const('üî• –ó–∞–¥–∞–Ω–∏—è'),
            id='activity_menu',
            on_click=on_event_click,
        ),
        Start(
            text=Const('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'),
            id='setting_menu',
            state=states.SettingsMainMenu.MAIN
        ),
        state=states.Main.MAIN,
        getter=(main_dialog_getter, get_planning_data_getter(include_other_days=False)),
    ),
    launch_mode=LaunchMode.ROOT,
)
