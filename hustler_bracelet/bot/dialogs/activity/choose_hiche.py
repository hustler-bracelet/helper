import operator
from uuid import uuid1

from aiogram import F, types
from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Radio, Column, Cancel, Row, Button
from aiogram_dialog.widgets.text import Format, Const, Jinja

from hustler_bracelet.bot.dialogs import states


async def niches_texts_getter(dialog_manager: DialogManager, **kwargs):
    radio_widget: Radio = dialog_manager.find('r_activities')

    activity_caption = None
    checked_item_id = radio_widget.get_checked()
    for caption_item_id, caption_ in [
        (
                '1',
                'caption_1'
        ),
        (
                '2',
                'caption_2'
        ),
        (
                '3',
                'caption_3'
        ),
    ]:
        if checked_item_id == caption_item_id:
            activity_caption = caption_
            break

    activity_name_mapping = {
        '1': 'name_1',
        '2': 'name_2',
        '3': 'name_3',
    }
    activity_emojy_mapping = {
        '1': 'emoj_1',
        '2': 'emoj_2',
        '3': 'emoj_3',
    }

    if (activity_caption is None) and (checked_item_id is not None):
        raise ValueError(f'–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ {checked_item_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')

    return {
        'activity_emojy': activity_emojy_mapping.get(checked_item_id),
        'activity_name': activity_name_mapping.get(checked_item_id),
        'activity_caption': activity_caption,
    }


async def activity_getter(dialog_manager: DialogManager, **kwargs):
    return {
        'activity_reward': 100_000
    }


async def on_choose_hiche_click(
        callback: types.CallbackQuery,
        button: Button,
        manager: DialogManager
):
    radio_widget: Radio = manager.find('r_activities')
    checked_item_id = radio_widget.get_checked()
    if checked_item_id is None:
        await callback.answer('–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!')
        return

    await manager.next()



choose_niche_dialog = Dialog(
    Window(
        Jinja(
            'üí∞ <b>–°–µ–∑–æ–Ω –∫—Ä–∏–ø—Ç—ã</b>\n'
            '\n'
            '–ù—É —á—Ç–æ, —Ö–∞—Å–ª–µ—Ä—ã, –≤—Ä–µ–º—è –ø–∞–º–ø–∏—Ç—å, –¥–∞–º–ø–∏—Ç—å, —Ö—É—è–º–ø–∏—Ç—å, –ú–ú–ú‚Äô–∏—Ç—å, –∏ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞–∫–∞–Ω—ã!\n'
            '–í—ã–±–∏—Ä–∞–π —Å–≤–æ—é –Ω–∏—à—É –∏ –≤–ø–µ—Ä—ë–¥ –∂–∞—Ä–∏—Ç—å —Å—Ç–µ–π–∫–∏–Ω–≥–∏!\n'
            '\n'
            '–í–æ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è, –≤—ã–ø–æ–ª–Ω—è—Ç—å –∏—Ö –∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞ —ç—Ç–æ –±–∞–ª–ª—ã, –ø—Ä–æ–¥–≤–∏–≥–∞—è—Å—å –≤ —Ç–æ–ø–µ.\n'
            '\n'
            '–ß–µ–º –≤—ã—à–µ —Ç—ã –≤ —Ç–æ–ø–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∫—É—Å–æ–∫ —Ç–µ–±–µ –ø–µ—Ä–µ–ø–∞–¥—ë—Ç –∏–∑ –ø—Ä–∏–∑–æ–≤–æ–≥–æ —Ñ–æ–Ω–¥–∞ –≤ <b>{{activity_reward|money}}</b>!\n'
            '–ò –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –æ–∫–∞–∑–∞–ª—Å—è –Ω–∞ —Å–∞–º–æ–º –ø–æ—Å–ª–µ–¥–Ω–µ–º –º–µ—Å—Ç–µ, <b>–¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑ —Ç—ã –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–æ–ª—É—á–∏—à—å!</b>\n'
            '–ü–æ—Ç–æ—Ä–æ–ø–∏—Å—å, –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ –ª–∏—à—å 16 –º–µ—Å—Ç...\n'  # TODO: –ê –æ–Ω–æ –Ω–∞–º –Ω–∞–¥–æ?
            '\n'
            '–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞...\n'
            '<b>–í—ã–±–µ—Ä–∏ –Ω–∏—à—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å</b> üëá',
            when=~F['activity_caption']
        ),
        Format(
            '{activity_emojy} <b>{activity_name}</b>\n'
            '\n'
            '<i>{activity_caption}</i>\n'
            '\n'
            'üëâ <b>–í—ã–±–∏—Ä–∞–µ—à—å —ç—Ç—É –Ω–∏—à—É?</b>',
            when=F['activity_caption']
        ),
        Column(
            Radio(
                Format("[{item[1]}]"),
                Format("{item[1]}"),
                id="r_activities",
                item_id_getter=operator.itemgetter(0),
                items=[
                    ('1', 'name_1'),
                    ('2', 'name_2'),
                    ('3', 'name_3'),
                ]
            )
        ),
        Row(
            Cancel(Const('‚ùå –û—Ç–º–µ–Ω–∞')),
            Button(
                Const('‚úÖ –í—ã–±—Ä–∞—Ç—å'),
                id='choose_activity',
                on_click=on_choose_hiche_click
            ),
        ),
        state=states.ActivityOnboarding.MAIN
    ),
    Window(
        Jinja(
            'üí∞ <b>–°–µ–∑–æ–Ω –∫—Ä–∏–ø—Ç—ã</b>\n'
            '\n'
            'üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, {{activity_name}}!</b>\n'
            '–¢–µ–±–µ –∏ –µ—â—ë <b>19 —É—á–∞—Å—Ç–Ω–∏–∫–∞–º</b> –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –ø–æ–±–æ—Ä–æ—Ç—å—Å—è –∑–∞\n'
            '<b>{{activity_reward|money}}</b>, –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –≤—ã–ø–æ–ª–Ω—è—è –∑–∞–¥–∞–Ω–∏—è, –Ω–∞–±–∏—Ä–∞—è –±–∞–ª–ª—ã –∏ –ø—Ä–æ–±–∏–≤–∞—è—Å—å –≤ —Ç–æ–ø!\n'
            '\n'
            '‚ö°Ô∏è –ê –≤–æ—Ç –∏ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–¥—ä–µ—Ö–∞–ª–æ. –ü–æ–≥–Ω–∞–ª–∏?'
        ),
        Cancel(Const('‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—é'), result={'show_task': True}),
        state=states.ActivityOnboarding.FINAL
    ),
    getter=(niches_texts_getter, activity_getter)
)
