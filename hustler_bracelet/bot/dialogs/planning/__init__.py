import datetime

from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Start, Cancel
from aiogram_dialog.widgets.text import Const, Format

from hustler_bracelet.bot.dialogs import states
from hustler_bracelet.managers import FinanceManager


async def planning_main_menu_statistic_getter(dialog_manager: DialogManager, **kwargs):
    finance_manager: FinanceManager = dialog_manager.middleware_data['finance_manager']

    return {
        'today_uncompleted_tasks_amount': await finance_manager.get_amount_of_tasks_filtered_by_planned_complete_date(
            datetime.date.today(),
            completed=False
        ),
        'tomorrow_uncompleted_tasks_amount': await finance_manager.get_amount_of_tasks_filtered_by_planned_complete_date(
            datetime.date.today() + datetime.timedelta(days=1),
            completed=False
        ),
        'uncompleted_tasks_amount': await finance_manager.get_amount_of_tasks(completed=False),
        'completed_tasks_amount': await finance_manager.get_amount_of_tasks(completed=True),
    }


planning_main_menu_dialog = Dialog(
    Window(
        Format(
            '‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ\n'
            '\n'
            'üìù {today_uncompleted_tasks_amount} –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n'
            ' ‚Ä¢  –ù–∞–ª–∏—Ç—å —Ç—Ä–∞—Ñ–∞ –í–∞–Ω–µ\n'
            ' ‚Ä¢  –í—ã–Ω–µ—Å—Ç–∏ –º—É—Å–æ—Ä\n'
            '\n'
            'üïê {tomorrow_uncompleted_tasks_amount} –∑–∞–¥–∞—á –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n'
            ' ‚Ä¢  –ò–Ω–≤–∞–π—Ç –Ω–∞ —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏—é\n'
            '\n'
            'üìÜ 1 –∑–∞–¥–∞—á–∞ –Ω–∞ 30 –∞–ø—Ä–µ–ª—è:\n'
            ' ‚Ä¢  –°–¥–∞—Ç—å –±–æ—Ç–∞ –ê–º–±–∏\n'
            '\n'
            'üí™ –£ —Ç–µ–±—è {uncompleted_tasks_amount} –∑–∞–¥–∞—á –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é. –ü–æ–≤–æ—Ä–∫–∞–µ–º?\n'
            '\n'
            'üìä –¢—ã –∑–∞–∫—Ä—ã–ª —É–∂–µ {completed_tasks_amount} –∑–∞–¥–∞—á. –ù–µ–ø–ª–æ—Ö–æ!'
        ),
        Start(
            text=Const('‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É'),
            id='add_task',
            state=states.AddTask.MAIN
        ),
        Start(
            text=Const('‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á–∏'),
            id='complete_some_tasks',
            state=states.CompleteSomeTasks.MAIN
        ),
        Cancel(),
        state=states.Planning.MAIN,
        getter=planning_main_menu_statistic_getter
    )
)
