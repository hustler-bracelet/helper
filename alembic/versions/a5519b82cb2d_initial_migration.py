"""initial migration

Revision ID: a5519b82cb2d
Revises: 
Create Date: 2024-05-29 11:44:35.918495

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a5519b82cb2d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('niche_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('added_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deadline', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['niche_id'], ['niche.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_completion_proof',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('activity_task_id', sa.Integer(), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('media', sa.Text(), nullable=False),
    sa.Column('sent_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['activity_task_id'], ['activity_task.id'], ),
    sa.ForeignKeyConstraint(['telegram_id'], ['user.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('yookassa_payment_info', sa.String(), nullable=True),
    sa.Column('payment_reason', sa.Enum('BRACELET', 'OTHER', name='paymentreason'), nullable=False),
    sa.Column('amount_rub', sa.Float(), nullable=False),
    sa.Column('paid_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['telegram_id'], ['user.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_payout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('reason', sa.Enum('REFERRAL', 'ACTIVITY', 'OTHER', name='payoutreason'), nullable=False),
    sa.Column('amount_rub', sa.Float(), nullable=False),
    sa.Column('paid_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['telegram_id'], ['user.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_task_completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('activity_task_id', sa.Integer(), nullable=False),
    sa.Column('proof_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', name='completionstatus'), server_default='PENDING', nullable=False),
    sa.Column('sent_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('checked_on', sa.DateTime(timezone=True), nullable=True),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_task_id'], ['activity_task.id'], ),
    sa.ForeignKeyConstraint(['proof_id'], ['task_completion_proof.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('payout')
    op.drop_table('payment')
    op.drop_table('activitytaskcompletion')
    op.drop_table('activitytask')
    op.drop_table('taskcompletionproof')
    op.alter_column('activity', 'name',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('activity', 'emoji',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('activity', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('activity', 'started_on',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('activity', 'deadline',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('asset', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('asset', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('asset', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('asset', 'interest_rate',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('asset', 'base_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('asset', 'current_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('category', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('category', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('category', 'type',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('financetransaction', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('financetransaction', 'type',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('financetransaction', 'category',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('financetransaction', 'value',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('financetransaction', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('financetransaction', 'transaction_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('investmenttransaction', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('investmenttransaction', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('investmenttransaction', 'asset_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('investmenttransaction', 'value',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('niche', 'activity_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('niche', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('niche', 'emoji',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('niche', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_foreign_key(None, 'niche', 'activity', ['activity_id'], ['id'])
    op.alter_column('task', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('task', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('task', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('task', 'planned_complete_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('task', 'is_completed',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.add_column('user', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('user', 'telegram_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('user', 'current_balance',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('user', 'is_participating_in_activity',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.create_foreign_key(None, 'user', 'user', ['referred_by'], ['telegram_id'])
    op.create_foreign_key(None, 'user', 'niche', ['selected_niche_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.alter_column('user', 'is_participating_in_activity',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('user', 'current_balance',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('user', 'telegram_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.drop_column('user', 'created_at')
    op.alter_column('task', 'is_completed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('task', 'planned_complete_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('task', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('task', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('task', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.drop_constraint(None, 'niche', type_='foreignkey')
    op.alter_column('niche', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('niche', 'emoji',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('niche', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('niche', 'activity_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('investmenttransaction', 'value',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('investmenttransaction', 'asset_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('investmenttransaction', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('investmenttransaction', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('financetransaction', 'transaction_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('financetransaction', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('financetransaction', 'value',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('financetransaction', 'category',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('financetransaction', 'type',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('financetransaction', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('category', 'type',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('category', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('category', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('asset', 'current_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('asset', 'base_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('asset', 'interest_rate',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('asset', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('asset', 'added_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('asset', 'telegram_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('activity', 'deadline',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('activity', 'started_on',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('activity', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('activity', 'emoji',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('activity', 'name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.create_table('taskcompletionproof',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('telegram_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('activity_task_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('media', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sent_on', postgresql.TIME(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='taskcompletionproof_pkey')
    )
    op.create_table('activitytask',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('niche_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('added_on', postgresql.TIME(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deadline', postgresql.TIME(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='activity_task_pkey')
    )
    op.create_table('activitytaskcompletion',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('telegram_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('activity_task_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proof_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sent_on', postgresql.TIME(timezone=True), autoincrement=False, nullable=True),
    sa.Column('checked_on', postgresql.TIME(timezone=True), autoincrement=False, nullable=True),
    sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='activitytaskcompletion_pkey')
    )
    op.create_table('payment',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('telegram_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('yookassa_payment_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('amount_rub', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('paid_on', postgresql.TIME(timezone=True), autoincrement=False, nullable=True)
    )
    op.create_table('payout',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('telegram_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('amount_rub', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('paid_on', postgresql.TIME(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='payout_pkey')
    )
    op.drop_table('activity_task_completion')
    op.drop_table('user_payout')
    op.drop_table('user_payment')
    op.drop_table('task_completion_proof')
    op.drop_table('activity_task')
    # ### end Alembic commands ###
